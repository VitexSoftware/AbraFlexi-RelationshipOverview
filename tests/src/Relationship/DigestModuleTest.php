<?php

declare(strict_types=1);

/**
 * This file is part of the MultiFlexi package
 *
 * https://github.com/VitexSoftware/AbraFlexi-RelationshipOverview
 *
 * (c) Vítězslav Dvořák <http://vitexsoftware.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Test\AbraFlexi\Relationship;

use AbraFlexi\Relationship\DigestModule;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2021-01-10 at 17:25:44.
 */
class DigestModuleTest extends \PHPUnit\Framework\TestCase
{
    protected DigestModule $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->object = new DigestModule();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void
    {
    }

    /**
     * @covers \AbraFlexi\Relationship\DigestModule::process
     *
     * @todo   Implement testprocess().
     */
    public function testprocess(): void
    {
        $this->assertEquals('', $this->object->process());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Relationship\DigestModule::dig
     *
     * @todo   Implement testdig().
     */
    public function testdig(): void
    {
        $this->assertEquals('', $this->object->dig());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Relationship\DigestModule::heading
     *
     * @todo   Implement testheading().
     */
    public function testheading(): void
    {
        $this->assertEquals('', $this->object->heading());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Relationship\DigestModule::description
     *
     * @todo   Implement testdescription().
     */
    public function testdescription(): void
    {
        $this->assertEquals('', $this->object->description());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Relationship\DigestModule::getCurrency
     *
     * @todo   Implement testgetCurrency().
     */
    public function testgetCurrency(): void
    {
        $this->assertEquals('', $this->object->getCurrency());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Relationship\DigestModule::formatCurrency
     *
     * @todo   Implement testformatCurrency().
     */
    public function testformatCurrency(): void
    {
        $this->assertEquals('', $this->object->formatCurrency());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Relationship\DigestModule::getPrice
     *
     * @todo   Implement testgetPrice().
     */
    public function testgetPrice(): void
    {
        $this->assertEquals('', $this->object->getPrice());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Relationship\DigestModule::getAmount
     *
     * @todo   Implement testgetAmount().
     */
    public function testgetAmount(): void
    {
        $this->assertEquals('', $this->object->getAmount());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Relationship\DigestModule::humanDate
     *
     * @todo   Implement testhumanDate().
     */
    public function testhumanDate(): void
    {
        $this->assertEquals('', $this->object->humanDate());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Relationship\DigestModule::isDateBetweenDates
     *
     * @todo   Implement testisDateBetweenDates().
     */
    public function testisDateBetweenDates(): void
    {
        $this->assertEquals('', $this->object->isDateBetweenDates());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Relationship\DigestModule::isDateWithinInterval
     *
     * @todo   Implement testisDateWithinInterval().
     */
    public function testisDateWithinInterval(): void
    {
        $this->assertEquals('', $this->object->isDateWithinInterval());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Relationship\DigestModule::isMyDate
     *
     * @todo   Implement testisMyDate().
     */
    public function testisMyDate(): void
    {
        $this->assertEquals('', $this->object->isMyDate());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Relationship\DigestModule::getTotalsDiv
     *
     * @todo   Implement testgetTotalsDiv().
     */
    public function testgetTotalsDiv(): void
    {
        $this->assertEquals('', $this->object->getTotalsDiv());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Relationship\DigestModule::saveToHtml
     *
     * @todo   Implement testsaveToHtml().
     */
    public function testsaveToHtml(): void
    {
        $this->assertEquals('', $this->object->saveToHtml());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Relationship\DigestModule::fileCleanUP
     *
     * @todo   Implement testfileCleanUP().
     */
    public function testfileCleanUP(): void
    {
        $this->assertEquals('', $this->object->fileCleanUP());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Relationship\DigestModule::getReportFilename
     *
     * @todo   Implement testgetReportFilename().
     */
    public function testgetReportFilename(): void
    {
        $this->assertEquals('', $this->object->getReportFilename());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Relationship\DigestModule::finalize
     *
     * @todo   Implement testfinalize().
     */
    public function testfinalize(): void
    {
        $this->assertEquals('', $this->object->finalize());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }
}
